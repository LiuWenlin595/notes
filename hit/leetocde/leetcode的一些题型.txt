链表：双指针，快慢指针，第k个指针，逆转链表，创建哨兵节点
树：递归，二叉搜索树中序遍历，DP
堆排序：查找topK(topK和堆排序的代码是不一样的，堆排序可以直接while n>0，但是topK需要把数组从头到尾遍历一遍)

总结，看到形如：A+B....+N=0的式子，要转换为(A+...T)=-((T+1)...+N)再计算，这个T的分割点一般是一半，特殊情况下需要自行判断。定T是解题的关键。

一般这种数对，还涉及排序的，根据第一个元素正向排序，根据第二个元素反向排序，或者根据第一个元素反向排序，根据第二个元素正向排序，往往能够简化解题过程。

滑动窗口思想：两个指针都从头开始，其中扩大指针负责每次扩大搜索范围，寻找满足条件的解，找到满足条件的解后通过缩小指针缩小范围，找出最优解，直到不满足条件了以后再次调整扩大指针，寻找下一波解

bfs，dfs题型：大部分的搜索问题(需要采用visit标记)，最短路径问题，全排列，数组搜索target可行解，遍历树路径，矩形框问题，大部分的排列组合问题
广度优先搜索可以从多个节点出发，而不是仅从一个节点出发
判断长度或者深度一般都是bfs+len(queue)双重循环

二维动态规划问题：最简单的是直接从左上到右下，还可以从右下到左上，还可以两个方向都做
股票类动态规划问题可以构造状态机，0-1背包问题直接额外构造一个target维度，贪婪版的最长递增子序列写法真香

双指针法在数组、字符串里的应用

序列比较大小的问题常用单调栈，复杂度为O(n)

一般的无序子序列的问题会考虑字典

前缀和：sum[i, j] = pre_sum[j] - pre_sum[i]， pre_sum不包含i j

动态规划模板：1.确定dp数组和下标的含义  2.设计合适的递推公式  3.对dp数组进行初始化  4.确定数组遍历的顺序  5.打印模拟dp的过程
递归法模板：1.确定参数和返回值  2.确定终止条件  3.设计单层递归的逻辑代码
回溯法模板：1.确定参数和返回值(一般参数用到再加，不需要返回值)  2.确定终止条件  3.bfs遍历  4.遍历程序中执行操作、下一步回溯(dfs)、撤销操作
